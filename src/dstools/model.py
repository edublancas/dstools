"""
A base model class that saves the commit hash/version that generated by
looking at its module.__version__ and also generates a unique id for it
"""
import inspect
from pathlib import Path
import subprocess
import importlib


def _get_git_hash_from_pkg(obj):
    module = inspect.getmodule(obj)
    path = Path(module.__file__).parent
    res = subprocess.run('cd {} && git rev-parse --short HEAD'.format(path),
                         check=True,
                         stdout=subprocess.PIPE,
                         shell=True)
    return res.stdout.decode('utf-8').replace('\n', '')


def _get_version_from_pkg(obj):
    module = inspect.getmodule(obj)
    pkg_name = module.__name__.split('.')[0]
    pkg = importlib.import_module(pkg_name)
    return pkg.__version__


class TraceableModel:
    """

    Examples
    --------
    >>> from dstools.model import TraceableModel
    >>> m = TraceableModel()
    >>> m.__version__
    """
    kind = 'git'

    def __init__(self):
        if self.kind not in ['git', 'pkg']:
            raise ValueError('kind must be git or pkg')
        fn = (_get_git_hash_from_pkg
              if self.kind == 'git' else _get_version_from_pkg)
        self.__version__ = fn(self)